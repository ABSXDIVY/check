# 以太坊网络配置
# 默认使用Docker容器内的本地以太坊开发节点
ETHEREUM_RPC_URL="http://ethereum-node:8545"

# 合约地址
# 在本地开发节点环境中，这个地址将在部署合约后自动更新
CONTRACT_ADDRESS="0x5FbDB2315678afecb367f032d93F642f64180aa3"

# 钱包私钥
# 用于部署合约和与区块链交互
# 使用开发模式时，这个私钥会对应开发节点中的一个预创建账户
# 每个开发节点预创建账户都有10000 ETH测试币
PRIVATE_KEY="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"

# 服务器配置
PORT="3001"
# 环境模式: development(开发), production(生产)
# 开发模式下会提供更多日志和错误信息，同时会使用模拟合约（如果无法连接到以太坊节点）
NODE_ENV="development"

# 连接配置
# 以太坊连接超时时间（毫秒）
ETH_CONNECTION_TIMEOUT="5000"
# 连接重试次数
ETH_CONNECTION_RETRIES="5"
# 连接重试延迟（毫秒）
ETH_CONNECTION_RETRY_DELAY="1000"

# CORS配置
# 允许的前端地址列表，用逗号分隔
# 生产环境部署时，请添加您的服务器IP或域名
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:3001,http://localhost:3003,http://localhost:3004,http://localhost:3005,http://localhost:3006,http://127.0.0.1:80,http://localhost:80,http://127.0.0.1:3000,http://127.0.0.1:3001"

# 日志配置
# 日志级别: error, warn, info, debug
LOG_LEVEL="info"
# 是否记录详细的以太坊操作日志
LOG_ETH_OPERATIONS="true"

# 部署优势说明：
# ✅ 无需注册外部服务：内置开发模式以太坊节点，无需Infura或Alchemy账号
# ✅ 无需购买测试币：开发节点自动预创建10个账户，每个账户拥有10000 ETH测试币
# ✅ 立即可用：开发节点启动后几乎立即可以使用，无需等待区块链同步
# ✅ 资源占用小：优化的配置使系统能够在低配云服务器上流畅运行
# ✅ 一键部署：只需执行docker-compose up -d即可完成全部部署
# ✅ 本地运行：完全本地化运行，不依赖外部网络连接